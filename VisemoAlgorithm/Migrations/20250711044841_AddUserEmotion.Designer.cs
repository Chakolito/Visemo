// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisemoAlgorithm.Data;

#nullable disable

namespace VisemoAlgorithm.Migrations
{
    [DbContext(typeof(VisemoAlgoDbContext))]
    [Migration("20250711044841_AddUserEmotion")]
    partial class AddUserEmotion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VisemoAlgorithm.Model.SelfAssessment", b =>
                {
                    b.Property<int>("LedgerActivityId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAffected")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LedgerActivityId");

                    b.ToTable("SelfAssessment", (string)null);
                });

            modelBuilder.Entity("VisemoAlgorithm.Model.SentimentLedger", b =>
                {
                    b.Property<int>("LedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("BuildResult")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CapturedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ClassroomActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<string>("EmotionDetected")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LedgerId");

                    b.ToTable("SentimentLedger", (string)null);
                });

            modelBuilder.Entity("VisemoAlgorithm.Model.StudentSentimentSummary", b =>
                {
                    b.Property<int>("LedgerActivityId")
                        .HasColumnType("int");

                    b.Property<string>("DetailedReport")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LedgerActivityId");

                    b.ToTable("StudentSentimentSummary", (string)null);
                });

            modelBuilder.Entity("VisemoAlgorithm.Model.UserEmotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NegativeEmotions")
                        .HasColumnType("int");

                    b.Property<int>("NeutralEmotions")
                        .HasColumnType("int");

                    b.Property<int>("PositiveEmotions")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserEmotions");
                });

            modelBuilder.Entity("VisemoAlgorithm.Model.SelfAssessment", b =>
                {
                    b.HasOne("VisemoAlgorithm.Model.SentimentLedger", "SentimentLedger")
                        .WithOne("SelfAssessment")
                        .HasForeignKey("VisemoAlgorithm.Model.SelfAssessment", "LedgerActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SentimentLedger");
                });

            modelBuilder.Entity("VisemoAlgorithm.Model.StudentSentimentSummary", b =>
                {
                    b.HasOne("VisemoAlgorithm.Model.SentimentLedger", "SentimentLedger")
                        .WithOne("StudentSentimentSummary")
                        .HasForeignKey("VisemoAlgorithm.Model.StudentSentimentSummary", "LedgerActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SentimentLedger");
                });

            modelBuilder.Entity("VisemoAlgorithm.Model.SentimentLedger", b =>
                {
                    b.Navigation("SelfAssessment")
                        .IsRequired();

                    b.Navigation("StudentSentimentSummary")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
