// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VisemoServices.Data;

#nullable disable

namespace VisemoServices.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250721024822_UpdatedUserAndClassroom")]
    partial class UpdatedUserAndClassroom
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClassroomUser", b =>
                {
                    b.Property<int>("EnrolledClassroomsId")
                        .HasColumnType("int");

                    b.Property<int>("EnrolledStudentsId")
                        .HasColumnType("int");

                    b.HasKey("EnrolledClassroomsId", "EnrolledStudentsId");

                    b.HasIndex("EnrolledStudentsId");

                    b.ToTable("ClassroomStudents", (string)null);
                });

            modelBuilder.Entity("VisemoServices.Model.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<TimeSpan>("Timer")
                        .HasColumnType("time(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("VisemoServices.Model.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TeacherUserId")
                        .HasColumnType("int");

                    b.Property<string>("className")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("TeacherUserId");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("VisemoServices.Model.SubmittedActivities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SubmittedActivities");
                });

            modelBuilder.Entity("VisemoServices.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("idNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("middleInitial")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassroomUser", b =>
                {
                    b.HasOne("VisemoServices.Model.Classroom", null)
                        .WithMany()
                        .HasForeignKey("EnrolledClassroomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisemoServices.Model.User", null)
                        .WithMany()
                        .HasForeignKey("EnrolledStudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VisemoServices.Model.Activity", b =>
                {
                    b.HasOne("VisemoServices.Model.Classroom", null)
                        .WithMany("Activities")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VisemoServices.Model.Classroom", b =>
                {
                    b.HasOne("VisemoServices.Model.User", "Teacher")
                        .WithMany("ClassroomsAsTeacher")
                        .HasForeignKey("TeacherUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("VisemoServices.Model.Classroom", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("VisemoServices.Model.User", b =>
                {
                    b.Navigation("ClassroomsAsTeacher");
                });
#pragma warning restore 612, 618
        }
    }
}
